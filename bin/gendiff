#!/usr/bin/env php
<?php

namespace Differ;

$autoloadPath1 = __DIR__ . '/../../../autoload.php';
// Путь для локальной работы с проектом
$autoloadPath2 = __DIR__ . '/../vendor/autoload.php';

if (file_exists($autoloadPath1)) {
    require_once $autoloadPath1;
} else {
    require_once $autoloadPath2;
}

function genDiff($pathToFile1, $pathToFile2)
{
    $f1handler = fopen($pathToFile1, 'r');
    $f2handler = fopen($pathToFile2, 'r');

    $f1data = json_decode(fread($f1handler, filesize($pathToFile1)), true);
    $f2data = json_decode(fread($f2handler, filesize($pathToFile2)), true);
    $totalData = array_merge($f1data, $f2data);
    ksort($totalData);

    $res = "{" . PHP_EOL;
    foreach ($totalData as $k => $v) {
        $in1 = array_key_exists($k, $f1data);
        $in2 = array_key_exists($k, $f2data);
        if ($in1 && $in2) {
            if ($f1data[$k] !== $f2data[$k]) {
                $res .= "  - " . $k.': ' . json_encode($f1data[$k]) . PHP_EOL;
                $res .= "  + " . $k.': ' . json_encode($f2data[$k]) . PHP_EOL;
            } else {
                $res .= "    " . $k.': ' . json_encode($v) . PHP_EOL;
            }
        } elseif ($in1) {
            $res .= "  - " . $k.': ' . json_encode($v) . PHP_EOL;
        } else {
            $res .= "  + " . $k.': ' . json_encode($v) . PHP_EOL;
        }    
    }

    $res .= "}" . PHP_EOL;

    fclose($f1handler);
    fclose($f2handler);

    echo($res);
    
    return $res;
}

$doc = <<<DOC
Generate diff

Usage:
  gendiff (-h|--help)
  gendiff (-v|--version)
  gendiff [--format <fmt>] <firstFile> <secondFile>

Options:
  -h --help                     Show this screen
  -v --version                  Show version
  --format <fmt>                Report format [default: stylish]

DOC;

$args = \Docopt::handle($doc, array('version'=>'1.0'));

$f1Path = $args['<firstFile>'];
$f2Path = $args['<secondFile>'];

return genDiff($f1Path, $f2Path);