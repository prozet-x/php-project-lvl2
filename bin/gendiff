#!/usr/bin/env php
<?php

$autoloadPath1 = __DIR__ . '/../../../autoload.php';
// Путь для локальной работы с проектом
$autoloadPath2 = __DIR__ . '/../vendor/autoload.php';

if (file_exists($autoloadPath1)) {
    require_once $autoloadPath1;
} else {
    require_once $autoloadPath2;
}

//require('../vendor/docopt/docopt/src/docopt.php');

$doc = <<<DOC
Generate diff

Usage:
  gendiff (-h|--help)
  gendiff (-v|--version)
  gendiff [--format <fmt>] <firstFile> <secondFile>

Options:
  -h --help                     Show this screen
  -v --version                  Show version
  --format <fmt>                Report format [default: stylish]

DOC;

$args = Docopt::handle($doc, array('version'=>'1.0'));
/*foreach ($args as $k=>$v) {
    echo $k.': '.json_encode($v).PHP_EOL;
}*/

$f1Path = $args['<firstFile>'];
$f2Path = $args['<secondFile>'];

$f1handler = fopen($f1Path, 'r');
$f2handler = fopen($f2Path, 'r');

$f1data = json_decode(fread($f1handler, filesize($f1Path)), true);
$f2data = json_decode(fread($f2handler, filesize($f2Path)), true);
$totalData = array_merge($f1data, $f2data);
ksort($totalData);
//print_r($totalData);
foreach ($totalData as $k => $v) {
    $in1 = array_key_exists($k, $f1data);
    $in2 = array_key_exists($k, $f2data);
    if ($in1 && $in2) {
        if ($f1data[$k] !== $f2data[$k]) {
            echo "- " . $k.': ' . json_encode($f1data[$k]) . PHP_EOL;
            echo "+ " . $k.': ' . json_encode($f2data[$k]) . PHP_EOL;
        } else {
            echo "  " . $k.': ' . json_encode($v) . PHP_EOL;
        }
    } elseif ($in1) {
        echo "- " . $k.': ' . json_encode($v) . PHP_EOL;
    } else {
        echo "+ " . $k.': ' . json_encode($v) . PHP_EOL;
    }
    
    
    
    //echo $k.': '.json_encode($v).PHP_EOL;
    
}

fclose($f1handler);
fclose($f2handler);
